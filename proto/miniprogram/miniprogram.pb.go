// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/miniprogram/miniprogram.proto

package miniprogram

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Request struct {
	Code                 string   `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Type                 string   `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}
func (*Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d2977a253a8e59b, []int{0}
}

func (m *Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request.Unmarshal(m, b)
}
func (m *Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request.Marshal(b, m, deterministic)
}
func (m *Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request.Merge(m, src)
}
func (m *Request) XXX_Size() int {
	return xxx_messageInfo_Request.Size(m)
}
func (m *Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Request proto.InternalMessageInfo

func (m *Request) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *Request) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

type Response struct {
	Token                string   `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Valid                bool     `protobuf:"varint,2,opt,name=valid,proto3" json:"valid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d2977a253a8e59b, []int{1}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *Response) GetValid() bool {
	if m != nil {
		return m.Valid
	}
	return false
}

func init() {
	proto.RegisterType((*Request)(nil), "miniprogram.Request")
	proto.RegisterType((*Response)(nil), "miniprogram.Response")
}

func init() {
	proto.RegisterFile("proto/miniprogram/miniprogram.proto", fileDescriptor_0d2977a253a8e59b)
}

var fileDescriptor_0d2977a253a8e59b = []byte{
	// 165 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x52, 0x2e, 0x28, 0xca, 0x2f,
	0xc9, 0xd7, 0xcf, 0xcd, 0xcc, 0xcb, 0x2c, 0x28, 0xca, 0x4f, 0x2f, 0x4a, 0xcc, 0x45, 0x66, 0xeb,
	0x81, 0x65, 0x85, 0xb8, 0x91, 0x84, 0x94, 0x0c, 0xb9, 0xd8, 0x83, 0x52, 0x0b, 0x4b, 0x53, 0x8b,
	0x4b, 0x84, 0x84, 0xb8, 0x58, 0x92, 0xf3, 0x53, 0x52, 0x25, 0x18, 0x15, 0x18, 0x35, 0x38, 0x83,
	0xc0, 0x6c, 0x90, 0x58, 0x49, 0x65, 0x41, 0xaa, 0x04, 0x13, 0x44, 0x0c, 0xc4, 0x56, 0x32, 0xe3,
	0xe2, 0x08, 0x4a, 0x2d, 0x2e, 0xc8, 0xcf, 0x2b, 0x4e, 0x15, 0x12, 0xe1, 0x62, 0x2d, 0xc9, 0xcf,
	0x4e, 0xcd, 0x83, 0x6a, 0x82, 0x70, 0x40, 0xa2, 0x65, 0x89, 0x39, 0x99, 0x29, 0x60, 0x6d, 0x1c,
	0x41, 0x10, 0x8e, 0x91, 0x0b, 0x17, 0xb7, 0x2f, 0xc2, 0x66, 0x21, 0x53, 0x2e, 0x16, 0xc7, 0xd2,
	0x92, 0x0c, 0x21, 0x11, 0x3d, 0x64, 0x27, 0x42, 0x1d, 0x23, 0x25, 0x8a, 0x26, 0x0a, 0xb1, 0x4f,
	0x89, 0x21, 0x89, 0x0d, 0xec, 0x09, 0x63, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0x2c, 0xf2, 0x1e,
	0x8f, 0xeb, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for Miniprogram service

type MiniprogramClient interface {
	// 小程序获取授权
	Auth(ctx context.Context, in *Request, opts ...client.CallOption) (*Response, error)
}

type miniprogramClient struct {
	c           client.Client
	serviceName string
}

func NewMiniprogramClient(serviceName string, c client.Client) MiniprogramClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "miniprogram"
	}
	return &miniprogramClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *miniprogramClient) Auth(ctx context.Context, in *Request, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "Miniprogram.Auth", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Miniprogram service

type MiniprogramHandler interface {
	// 小程序获取授权
	Auth(context.Context, *Request, *Response) error
}

func RegisterMiniprogramHandler(s server.Server, hdlr MiniprogramHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&Miniprogram{hdlr}, opts...))
}

type Miniprogram struct {
	MiniprogramHandler
}

func (h *Miniprogram) Auth(ctx context.Context, in *Request, out *Response) error {
	return h.MiniprogramHandler.Auth(ctx, in, out)
}
